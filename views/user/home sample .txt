<%- include('../layouts/admin/header',{title: editMode ? 'Edit Product' : 'Add Product' }) %>

  <!-- Bootstrap CSS -->
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <!-- font awsome adding link -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <!-- Cropper CSS for image cropping -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
  </head>

  <body>
    <div class="container mt-5">
      <h1 class="mb-4">
        <%= editMode ? 'Edit Product' : 'Add Product' %>
        <span id="messageShow" class=" text-danger"></span>
      </h1>
      <% if (typeof successMessage !=='undefined' && successMessage.length> 0) { %>
        <div class="alert alert-success">
          <%= successMessage %>
        </div>
        <% } %>

          <% if (typeof errorMessage !=='undefined' && errorMessage.length> 0) { %>
            <div class="alert alert-danger">
              <ul>
                <% errorMessage.forEach(error=> { %>
                  <li>
                    <%= error %>
                  </li>
                  <% }); %>
              </ul>
            </div>
            <% } %>
            <div id="message-container"></div>
              <form
                action="<%= editMode ? `/admin/product/editProduct/${product._id}` : '/admin/product/addProduct' %>  "
                method="post" id="upload-form" enctype="multipart/form-data" >
                <div class="form-group ">
                  <label for="productName">Product Name</label>
                  <input type="text" class="form-control" id="productName" placeholder="Enter product name"
                    name="productName" value="<%= editMode ? product.productName  :'' %>" required >
                    <i class="fa  " aria-hidden="true"></i>
                     <span></span>
                </div>
                <div class="form-group">
                  <label for="productPrice">Product Price</label>
                  <input type="number" class="form-control" id="productPrice" placeholder="Enter product price"
                    name="price" value="<%= editMode ? product.price  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productStock">Stock</label>
                  <input type="number" class="form-control" id="productStock" placeholder="Enter stock quantity"
                    name="stock" value="<%= editMode ? product.stock : '' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productWarranty">Warranty (year)</label>
                  <input type="number" class="form-control" id="productWarranty" placeholder="Enter warranty duration"
                    name="warranty" value="<%= editMode ? product.warranty : '' %>" required>
                    <!-- <i class="fa  " aria-hidden="true"></i>
                    <span></span> -->
                    <div id="messageShow"></div>
                  </div>
              
                <!-- new -->
                <div class="form-group">
                  <label for="watchType">Watch Type</label>
                  <input type="text" class="form-control" id="watchType" placeholder="Enter product watchType"
                    name="watchType" value="<%= editMode ? product.watchType  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="CaseMaterial">Case Material</label>
                  <input type="text" class="form-control" id="CaseMaterial" placeholder="Enter product CaseMaterial"
                    name="CaseMaterial" value="<%= editMode ? product.CaseMaterial  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="dialColour">Dial Colour</label>
                  <input type="text" class="form-control" id="dialColour" placeholder="Enter product dialColour"
                    name="dialColour" value="<%= editMode ? product.dialColour  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                   </div>
                <div class="form-group">
                  <label for="strapMaterial">Strap Material</label>
                  <input type="text" class="form-control" id="strapMaterial" placeholder="Enter product strapMaterial"
                    name="strapMaterial" value="<%= editMode ? product.strapMaterial  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="ModelNumber">Model Number</label>
                  <input type="number" class="form-control" id="ModelNumber" placeholder="Enter product ModelNumber"
                    name="ModelNumber" value="<%= editMode ? product.ModelNumber  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productName">Features</label>
                  <input type="text" class="form-control" id="features" placeholder="Enter product features"
                    name="features" value="<%= editMode ? product.features  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productBrand">Brand</label>
                  <select class="form-control" id="productBrand" name="brand" required>
                    <% brands.forEach(brand=> { %>
                      <option value="<%= brand._id %>" <%= editMode && product.brand && product.brand.equals(brand._id) ? 'selected' : '' %>>
                        <%= brand.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>
                <div class="form-group">
                  <label for="productCategory">Category</label>
                  <select class="form-control" id="productCategory" name="category" required>
                    <% categories.forEach(category=> { %>
                      <option value="<%= category._id %>" <%= editMode && product.category && product.category.equals(category._id) ? 'selected' : '' %>>
                        <%= category.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>



                <h2>Select Three Images</h2>

                <div class="form-group">
                  <label for="image1">Image 1</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 0)">
                  <% if (editMode && product.images && product.images.length > 0) { %>
                    <div id="preview1" class="image-preview">
                      <img src="<%= product.images[0] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview1" class="image-preview"></div>
                  <% } %>
                </div>
              
                <div class="form-group">
                  <label for="image2">Image 2</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 1)">
                  <% if (editMode && product.images && product.images.length > 1) { %>
                    <div id="preview2" class="image-preview">
                      <img src="<%= product.images[1] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview2" class="image-preview"></div>
                  <% } %>
                </div>
              
                <div class="form-group">
                  <label for="image3">Image 3</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 2)">
                  <% if (editMode && product.images && product.images.length > 2) { %>
                    <div id="preview3" class="image-preview">
                      <img src="<%= product.images[2] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview3" class="image-preview"></div>
                  <% } %>
                </div>
              
                <!-- <p id="file-count">No files selected</p>
                <span id="image-error" style="color: red;"></span> -->
              
                
                <br>
                <br>
                <button type="submit" id="productSubmit" class="btn btn-primary d-block">
                  <%= editMode ? 'Update Product' : 'Add Product' %>
                </button>
              </form>
    </div>

    <style>
      .container .fa{
        position: absolute;
        right: 100px;
        margin-top: -30px;

      }
      .container .form-group.errors input{
        border-color:  #f00;
        border-width:  2px;
      }
      .container .form-group.errors .fa{
        color:  #f00;
      }
      .form-group span{
        display: none;
      }
      .form-group.errors span{
        color: #f00;
        display: block;
      }
      .container .form-group.success .fa{
        color:  #0b0;
      }
      .container .form-group.success input{
        border-color : #0b0;
        border-width: 2px;
      }
      .form-group.success span{
        color: #0b0;
        /* display: block; */
      }
      .image-preview img {
    width: 300px;
    height: auto;
    margin-right: 0px;
}
    </style>


    <script src="/script/product.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


<!-- image preview while selecting a image -->
<script>
  function previewImage(event, index) {
  const file = event.target.files[0];
  const reader = new FileReader();
  const preview = document.getElementById(`preview${index + 1}`);

  reader.onload = function() {
    const imgElement = document.createElement('img');
    imgElement.src = reader.result;
    imgElement.alt = 'Image Preview';
    preview.innerHTML = '';
    preview.appendChild(imgElement);
  };

  if (file) {
    reader.readAsDataURL(file);
  } else {
    preview.innerHTML = 'No file selected';
  }
}

</script>

<script>
  document.getElementById('upload-form').addEventListener('submit', async function (event) {
      event.preventDefault(); // Prevent default form submission

      const form = event.target;
      const formData = new FormData(form);
      const url = form.action; // This will use the correct URL from the form action attribute
      const messageContainer = document.getElementById('message-container');

      try {
          const response = await fetch(url, {
              method: 'POST',
              body: formData,
          });

          const result = await response.json();

          // Clear previous messages
          messageContainer.innerHTML = '';

          if (response.ok) {
              // Success message
              const successMessage = document.createElement('div');
              successMessage.className = 'alert alert-success';
              successMessage.textContent = result.message || 'Product updated successfully!';
              messageContainer.appendChild(successMessage);

              // Optionally, redirect to another page after a delay
              setTimeout(() => {
                  window.location.href = '/admin/product/productList';
              }, 2000);
          } else {
              // Error message
              const errorMessage = document.createElement('div');
              errorMessage.className = 'alert alert-danger';
              errorMessage.textContent = result.message || 'An error occurred while updating the product.';
              messageContainer.appendChild(errorMessage);
          }
      } catch (error) {
          console.error('Error:', error);
          // Display error message
          messageContainer.innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
      }
  });


</script>


    <%- include('../layouts/admin/adminFooter') %>







    update product corrected
    <%- include('../layouts/admin/header',{title: editMode ? 'Edit Product' : 'Add Product' }) %>

  <!-- Bootstrap CSS -->
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <!-- font awsome adding link -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <!-- Cropper CSS for image cropping -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
  </head>

  <body>
    <div class="container mt-5">
      <h1 class="mb-4">
        <%= editMode ? 'Edit Product' : 'Add Product' %>
        <span id="messageShow" class=" text-danger"></span>
      </h1>
      <% if (typeof successMessage !=='undefined' && successMessage.length> 0) { %>
        <div class="alert alert-success">
          <%= successMessage %>
        </div>
        <% } %>

          <% if (typeof errorMessage !=='undefined' && errorMessage.length> 0) { %>
            <div class="alert alert-danger">
              <ul>
                <% errorMessage.forEach(error=> { %>
                  <li>
                    <%= error %>
                  </li>
                  <% }); %>
              </ul>
            </div>
            <% } %>
            <div id="message-container"></div>
              <form
                action="<%= editMode ? `/admin/product/editProduct/${product._id}` : '/admin/product/addProduct' %>  "
                method="post" id="upload-form" enctype="multipart/form-data" >
                <div class="form-group ">
                  <label for="productName">Product Name</label>
                  <input type="text" class="form-control" id="productName" placeholder="Enter product name"
                    name="productName" value="<%= editMode ? product.productName  :'' %>" required >
                    <i class="fa  " aria-hidden="true"></i>
                     <span></span>
                </div>
                <div class="form-group">
                  <label for="productPrice">Product Price</label>
                  <input type="number" class="form-control" id="productPrice" placeholder="Enter product price"
                    name="price" value="<%= editMode ? product.price  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productStock">Stock</label>
                  <input type="number" class="form-control" id="productStock" placeholder="Enter stock quantity"
                    name="stock" value="<%= editMode ? product.stock : '' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productWarranty">Warranty (year)</label>
                  <input type="number" class="form-control" id="productWarranty" placeholder="Enter warranty duration"
                    name="warranty" value="<%= editMode ? product.warranty : '' %>" required>
                    <!-- <i class="fa  " aria-hidden="true"></i>
                    <span></span> -->
                    <div id="messageShow"></div>
                  </div>
              
                <!-- new -->
                <div class="form-group">
                  <label for="watchType">Watch Type</label>
                  <input type="text" class="form-control" id="watchType" placeholder="Enter product watchType"
                    name="watchType" value="<%= editMode ? product.watchType  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="CaseMaterial">Case Material</label>
                  <input type="text" class="form-control" id="CaseMaterial" placeholder="Enter product CaseMaterial"
                    name="CaseMaterial" value="<%= editMode ? product.CaseMaterial  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="dialColour">Dial Colour</label>
                  <input type="text" class="form-control" id="dialColour" placeholder="Enter product dialColour"
                    name="dialColour" value="<%= editMode ? product.dialColour  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                   </div>
                <div class="form-group">
                  <label for="strapMaterial">Strap Material</label>
                  <input type="text" class="form-control" id="strapMaterial" placeholder="Enter product strapMaterial"
                    name="strapMaterial" value="<%= editMode ? product.strapMaterial  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="ModelNumber">Model Number</label>
                  <input type="number" class="form-control" id="ModelNumber" placeholder="Enter product ModelNumber"
                    name="ModelNumber" value="<%= editMode ? product.ModelNumber  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productName">Features</label>
                  <input type="text" class="form-control" id="features" placeholder="Enter product features"
                    name="features" value="<%= editMode ? product.features  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productBrand">Brand</label>
                  <select class="form-control" id="productBrand" name="brand" required>
                    <% brands.forEach(brand=> { %>
                      <option value="<%= brand._id %>" <%= editMode && product.brand && product.brand.equals(brand._id) ? 'selected' : '' %>>
                        <%= brand.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>
                <div class="form-group">
                  <label for="productCategory">Category</label>
                  <select class="form-control" id="productCategory" name="category" required>
                    <% categories.forEach(category=> { %>
                      <option value="<%= category._id %>" <%= editMode && product.category && product.category.equals(category._id) ? 'selected' : '' %>>
                        <%= category.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>



                <h2>Select Three Images</h2>

                <div class="form-group">
                  <label for="image1">Image 1</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 0)">
                  <% if (editMode && product.images && product.images.length > 0) { %>
                    <div id="preview1" class="image-preview">
                      <img src="<%= product.images[0] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview1" class="image-preview"></div>
                  <% } %>
                </div>
              
                <div class="form-group">
                  <label for="image2">Image 2</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 1)">
                  <% if (editMode && product.images && product.images.length > 1) { %>
                    <div id="preview2" class="image-preview">
                      <img src="<%= product.images[1] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview2" class="image-preview"></div>
                  <% } %>
                </div>
              
                <div class="form-group">
                  <label for="image3">Image 3</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 2)">
                  <% if (editMode && product.images && product.images.length > 2) { %>
                    <div id="preview3" class="image-preview">
                      <img src="<%= product.images[2] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview3" class="image-preview"></div>
                  <% } %>
                </div>
              
                <!-- <p id="file-count">No files selected</p>
                <span id="image-error" style="color: red;"></span> -->
              
                
                <br>
                <br>
                <button type="submit" id="productSubmit" class="btn btn-primary d-block">
                  <%= editMode ? 'Update Product' : 'Add Product' %>
                </button>
              </form>
    </div>

    <style>
      .container .fa{
        position: absolute;
        right: 100px;
        margin-top: -30px;

      }
      .container .form-group.errors input{
        border-color:  #f00;
        border-width:  2px;
      }
      .container .form-group.errors .fa{
        color:  #f00;
      }
      .form-group span{
        display: none;
      }
      .form-group.errors span{
        color: #f00;
        display: block;
      }
      .container .form-group.success .fa{
        color:  #0b0;
      }
      .container .form-group.success input{
        border-color : #0b0;
        border-width: 2px;
      }
      .form-group.success span{
        color: #0b0;
        /* display: block; */
      }
      .image-preview img {
    width: 300px;
    height: auto;
    margin-right: 0px;
}
    </style>


    <script src="/script/product.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>



<!-- <script>

  function previewImage(event, index) {
  const file = event.target.files[0];
  const reader = new FileReader();
  const preview = document.getElementById(`preview${index + 1}`);


  reader.onload = function() {
    const imgElement = document.createElement('img');
    imgElement.src = reader.result;
    imgElement.alt = 'Image Preview';
    preview.innerHTML = '';
    preview.appendChild(imgElement);
  };

  if (file) {
    reader.readAsDataURL(file);
  } else {
    preview.innerHTML = 'No file selected';
  }
}


  document.getElementById('upload-form').addEventListener('submit', async function (event) {
      event.preventDefault(); // Prevent default form submission

      const form = event.target;
      const formData = new FormData(form);
      const url = form.action; // This will use the correct URL from the form action attribute
      const messageContainer = document.getElementById('message-container');



      try {
          const response = await fetch(url, {
              method: 'POST',
              body: formData,
          });

          const result = await response.json();

          // Clear previous messages
          messageContainer.innerHTML = '';

          if (response.ok) {
              // Success message
              const successMessage = document.createElement('div');
              successMessage.className = 'alert alert-success';
              successMessage.textContent = result.message || 'Product updated successfully!';
              messageContainer.appendChild(successMessage);

              // Optionally, redirect to another page after a delay
              setTimeout(() => {
                  window.location.href = '/admin/product/productList';
              }, 2000);
          } else {
              // Error message
              const errorMessage = document.createElement('div');
              errorMessage.className = 'alert alert-danger';
              errorMessage.textContent = result.message || 'An error occurred while updating the product.';
              messageContainer.appendChild(errorMessage);
          }
      } catch (error) {
          console.error('Error:', error);
          // Display error message
          messageContainer.innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
      }
  });

  // function previewImage(event, index) {
  //     const reader = new FileReader();
  //     reader.onload = function () {
  //         const preview = document.getElementById(`preview${index + 1}`);
  //         preview.innerHTML = `<img src="${reader.result}" alt="Image Preview">`;
  //     };
  //     reader.readAsDataURL(event.target.files[0]);
  // }
</script> -->

<script>
  let imageIndexes = [];
  function previewImage(event, index) {
  const file = event.target.files[0];
  const reader = new FileReader();
  const preview = document.getElementById(`preview${index + 1}`);

    imageIndexes.push(index)
    console.log('image index',imageIndexes)
  reader.onload = function() {
    const imgElement = document.createElement('img');
    imgElement.src = reader.result;
    imgElement.alt = 'Image Preview';
    preview.innerHTML = '';
    preview.appendChild(imgElement);
  };

  if (file) {
    reader.readAsDataURL(file);
  } else {
    preview.innerHTML = 'No file selected';
  }
}


  document.getElementById('upload-form').addEventListener('submit', async function (event) {
      event.preventDefault(); // Prevent default form submission
      alert('Image indexes: ' + imageIndexes.join(', '));
      console.log('In upload:', imageIndexes);
      const form = event.target;
      const formData = new FormData(form);
      formData.append('imageIndexes', JSON.stringify(imageIndexes));
      const url = form.action; // This will use the correct URL from the form action attribute
      const messageContainer = document.getElementById('message-container');



      try {
          const response = await fetch(url, {
              method: 'POST',
              body: formData,
          });

          const result = await response.json();

          // Clear previous messages
          messageContainer.innerHTML = '';

          if (response.ok) {
              // Success message
              const successMessage = document.createElement('div');
              successMessage.className = 'alert alert-success';
              successMessage.textContent = result.message || 'Product updated successfully!';
              messageContainer.appendChild(successMessage);

              // Optionally, redirect to another page after a delay
              setTimeout(() => {
                  window.location.href = '/admin/product/productList';
              }, 2000);
          } else {
              // Error message
              const errorMessage = document.createElement('div');
              errorMessage.className = 'alert alert-danger';
              errorMessage.textContent = result.message || 'An error occurred while updating the product.';
              messageContainer.appendChild(errorMessage);
          }
      } catch (error) {
          console.error('Error:', error);
          // Display error message
          messageContainer.innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
      }
  });

  // function previewImage(event, index) {
  //     const reader = new FileReader();
  //     reader.onload = function () {
  //         const preview = document.getElementById(`preview${index + 1}`);
  //         preview.innerHTML = `<img src="${reader.result}" alt="Image Preview">`;
  //     };
  //     reader.readAsDataURL(event.target.files[0]);
  // }
</script>

    <%- include('../layouts/admin/adminFooter') %>







===============================================================================================
    const updateProduct = async (req, res) => {
    try {
        console.log('update product')
        const id = req.params.id;
        let imageIndexes = req.body.imageIndexes || []; 
         // Parse imageIndexes to an array
        //  imageIndexes = JSON.parse(imageIndexes);
        // console.log('imageisndex:',imageIndexes)
        const{productName,price,stock,warranty,rating,watchType,CaseMaterial,dialColour,strapMaterial,ModelNumber,features,brand,category}= req.body
       
        const updatedProduct  = await productModel.findById(id)
        if (!updatedProduct) {
            console.log('updated product ont seen')
            return res.status(404).json({ message: 'Product not found.' });
        }

        updatedProduct.productName = productName;
        updatedProduct.price = price;
        updatedProduct.stock = stock;
        updatedProduct.warranty = warranty;
        updatedProduct.rating = rating;
        updatedProduct.watchType = watchType;
        updatedProduct.CaseMaterial = CaseMaterial;
        updatedProduct.dialColour = dialColour;
        updatedProduct.strapMaterial = strapMaterial;
        updatedProduct.ModelNumber = ModelNumber;
        updatedProduct.features = features;
        updatedProduct.brand = brand;
        updatedProduct.category = category;

        if (req.files && req.files.length > 0) {
            const images = req.files;
            const imagePaths = [];
            console.log('images:',images)
            // Process each uploaded image
            for (const image of images) {
              const imagePath = `/images/product/${image.filename}`; 
              console.log(' path:',imagePath)
              imagePaths.push(imagePath);
            
            }
            console.log('image paths:',imagePaths)
            imageIndexes.forEach((index, i) => {
                updatedProduct.images[index] = imagePaths[i];
            });
          }

          const update = await updatedProduct.save();
          console.log('images updated:',update)

        res.status(200).json({ message: 'Product updated successfully!' });
    } catch (error) {
        console.log('editing product:', error);
        res.status(500).json({ message: 'An error occurred while editing the product.' });
    }

}
==========================================================================

edit product page

<%- include('../layouts/admin/header', { title: 'Edit Product' }) %>

<!-- Bootstrap CSS -->
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<!-- Cropper CSS for image cropping -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />

</head>

<body>
    <div class="container mt-5">
        <h1 class="mb-4">Edit Product</h1>
        <% if (typeof successMessage !== 'undefined' && successMessage.length > 0) { %>
        <div class="alert alert-success">
            <%= successMessage %>
        </div>
        <% } %>

        <% if (typeof errorMessage !== 'undefined' && errorMessage.length > 0) { %>
        <div class="alert alert-danger">
            <ul>
                <% errorMessage.forEach(error => { %>
                <li><%= error %></li>
                <% }); %>
            </ul>
        </div>
        <% } %>

        <form action="/admin/product/editProduct/<%= product._id %>" method="post" id="upload-form"
            enctype="multipart/form-data">
            <div class="form-group">
                <label for="productName">Product Name</label>
                <input type="text" class="form-control" id="productName" placeholder="Enter product name"
                    name="productName" value="<%= product.productName %>" required>
            </div>
            <div class="form-group">
                <label for="productPrice">Product Price</label>
                <input type="number" class="form-control" id="productPrice" placeholder="Enter product price"
                    name="price" value="<%= product.price %>" required>
            </div>
            <div class="form-group">
                <label for="productStock">Stock</label>
                <input type="number" class="form-control" id="productStock" placeholder="Enter stock quantity"
                    name="stock" value="<%= product.stock %>" required>
            </div>
            <div class="form-group">
                <label for="productWarranty">Warranty (year)</label>
                <input type="number" class="form-control" id="productWarranty" placeholder="Enter warranty duration"
                    name="warranty" value="<%= product.warranty %>" required>
            </div>
            <div class="form-group">
                <label for="watchType">Watch Type</label>
                <input type="text" class="form-control" id="watchType" placeholder="Enter product watchType"
                    name="watchType" value="<%= product.watchType %>" required>
            </div>
            <div class="form-group">
                <label for="CaseMaterial">Case Material</label>
                <input type="text" class="form-control" id="CaseMaterial" placeholder="Enter product CaseMaterial"
                    name="CaseMaterial" value="<%= product.CaseMaterial %>" required>
            </div>
            <div class="form-group">
                <label for="dialColour">Dial Colour</label>
                <input type="text" class="form-control" id="dialColour" placeholder="Enter product dialColour"
                    name="dialColour" value="<%= product.dialColour %>" required>
            </div>
            <div class="form-group">
                <label for="strapMaterial">Strap Material</label>
                <input type="text" class="form-control" id="strapMaterial" placeholder="Enter product strapMaterial"
                    name="strapMaterial" value="<%= product.strapMaterial %>" required>
            </div>
            <div class="form-group">
                <label for="ModelNumber">Model Number</label>
                <input type="number" class="form-control" id="ModelNumber" placeholder="Enter product ModelNumber"
                    name="ModelNumber" value="<%= product.ModelNumber %>" required>
            </div>
            <div class="form-group">
                <label for="features">Features</label>
                <input type="text" class="form-control" id="features" placeholder="Enter product features"
                    name="features" value="<%= product.features %>" required>
            </div>
            <div class="form-group">
                <label for="productBrand">Brand</label>
                <select class="form-control" id="productBrand" name="brand" required>
                    <% brands.forEach(brand => { %>
                    <option value="<%= brand._id %>" <%= product.brand.toString() === brand._id.toString() ?
                        'selected' : '' %>><%= brand.name %></option>
                    <% }) %>
                </select>
            </div>
            <div class="form-group">
                <label for="productCategory">Category</label>
                <select class="form-control" id="productCategory" name="category" required>
                    <% categories.forEach(category => { %>
                    <option value="<%= category._id %>" <%= product.category.toString() === category._id.toString()
                        ? 'selected' : '' %>><%= category.name %></option>
                    <% }) %>
                </select>
            </div>

            <h2>Edit Images</h2>

            <% product.images.forEach((img, idx) => { %>
                <div class="image-container" style="margin-right: 10px">
                    <input id="productImage<%= idx %>" type="file" class="form-control-file" onchange="previewImage(event, 'imagePreview<%= idx %>', '<%= idx %>');" accept="image/*" />
                    <img id="imagePreview<%= idx %>" name="productImage<%= idx %>" src="<%= img %>" style="width: 100px; height: 100px; object-fit: cover" />
                    <button id="deleteBtn<%= idx %>" type="button" onclick="deleteImg('<%= idx %>');" class="btn btn-danger">Delete</button>
                    <button id="cropBtn<%= idx %>" style="display: none" type="button" onclick="cropImage('<%= idx %>');" class="btn btn-primary">Crop</button>
                    <input type="hidden" id="croppedImage<%= idx %>" name="croppedImages[<%= idx %>]" />
                </div>
                <% }) %>
                <!-- <div id="error-message-image1" style="color: red"></div>

                <label for="image">Add image:</label><br />
                <input type="file" id="images" name="images" accept="image/*" multiple onchange="displaySelectedImages(this)" />
                <div class="selected-images-container" id="selectedImagesContainer"></div>
              </div>
              <div class="selected-images-container" id="selectedImagesContainer"></div>
              <span class="error-message" id="images-error" style="color: red"></span><br />
              <hr />  -->
                <!-- New image upload -->
                <!-- <label for="images">Add New Images:</label>
                <input type="file" id="images" name="images" accept="image/*" multiple onchange="displaySelectedImages(this)" />
                <div class="selected-images-container" id="selectedImagesContainer"></div> -->
            
        

            <button type="submit" class="btn btn-primary d-block">Update Product</button>
        </form>
    </div>

  

    <!-- Your scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="/script/product.js"></script>

    <style>
        /* Your custom styles */
    </style>
<script>
    // Global variables for Cropper.js
let cropper;
let cropIndex;

// Function to preview selected image
function previewImage(event, imagePreviewId, index) {
    const reader = new FileReader();
    reader.onload = function () {
        const imagePreview = document.getElementById(imagePreviewId);
        if (imagePreview) {
            imagePreview.src = reader.result;
            imagePreview.classList.add("selected-image");
            cropIndex = index;
            initCropper(imagePreview);
            document.getElementById(`cropBtn${index}`).style.display = "inline-block";
            document.getElementById(`deleteBtn${index}`).style.display = "none";
        } else {
            console.error("Image preview element not found.");
        }
    };
    reader.readAsDataURL(event.target.files[0]);
}

// Function to initialize Cropper.js for image cropping
function initCropper(imageElement) {
    if (imageElement && imageElement.tagName.toLowerCase() === "img") {
        if (cropper) {
            cropper.destroy();
        }
        cropper = new Cropper(imageElement, {
            aspectRatio: 1,
            viewMode: 1,
            minContainerWidth: 500,
            minContainerHeight: 500,
            ready() {
                document.querySelector(".cropper-container").style.maxWidth = "4000px";
                document.querySelector(".cropper-container").style.maxHeight = "4000px";
            },
        });
    } else {
        console.log("Invalid image element");
    }
}

// Function to crop the image using Cropper.js
function cropImage(index) {
    if (cropper) {
        const canvas = cropper.getCroppedCanvas({
            width: cropper.getImageData().naturalWidth,
            height: cropper.getImageData().naturalHeight,
        });
        document.getElementById(`croppedImage${index}`).value = canvas.toDataURL('image/png', 1.0);

        cropper.destroy();
        document.getElementById(`cropBtn${index}`).style.display = 'none';
        document.getElementById(`deleteBtn${index}`).style.display = 'inline-block';
    }
}

// Function to display selected images for cropping
function displaySelectedImages(input) {
    const selectedImagesContainer = document.getElementById("selectedImagesContainer");
    selectedImagesContainer.innerHTML = "";

    for (let i = 0; i < input.files.length; i++) {
        const file = input.files[i];
        const reader = new FileReader();
        const cropContainer = document.createElement("div");
        cropContainer.classList.add("image-crop-container");
        cropContainer.innerHTML = `
            <div class="image-container">
                <img id="newImage${i}" src="" alt="Select an image to crop">
            </div>
            <button class="crop-button" onclick="initCropper(document.getElementById('newImage${i}'))">Crop Image ${i + 1}</button>
        `;
        selectedImagesContainer.appendChild(cropContainer);

        reader.onload = () => {
            const image = cropContainer.querySelector(`#newImage${i}`);
            image.src = reader.result;
        };
        reader.readAsDataURL(file);
    }
}

// Function to convert data URL to File object
function dataURLToFile(dataUrl, filename) {
    const arr = dataUrl.split(",");
    const mime = arr[0].match(/:(.*?);/)[1];
    const bstr = atob(arr[1]);

    let n = bstr.length;
    const u8arr = new Uint8Array(n);
    while (n--) {
        u8arr[n] = bstr.charCodeAt(n);
    }

    return new File([u8arr], filename, { type: mime });
}

// Utility function to create a FileList from an array of files
function createFileList(filesArray) {
    const dataTransfer = new DataTransfer();
    filesArray.forEach(file => {
        dataTransfer.items.add(file);
    });
    return dataTransfer.files;
}

titleEl.addEventListener("input", (e) => {
    sendDebounceTextToBackend(e.target.value);
  });

  function debounce(callback, delay = 1000) {
    let timeout;
    return (...args) => {
      clearTimeout(timeout);
      timeout = setTimeout(() => callback(...args), delay);
    };
  }
</script>
    <%- include('../layouts/admin/adminFooter') %>
</body>

</html>
