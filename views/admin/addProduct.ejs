<%- include('../layouts/admin/header',{title: editMode ? 'Edit Product' : 'Add Product' }) %>

  <!-- Bootstrap CSS -->
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <!-- font awsome adding link -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <!-- Cropper CSS for image cropping -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

  </head>

  <body>
    <div class="container mt-5">
      <h1 class="mb-4">
        <%= editMode ? 'Edit Product' : 'Add Product' %>
        <span id="messageShow" class=" text-danger"></span>
      </h1>
      <% if (typeof successMessage !=='undefined' && successMessage.length> 0) { %>
        <div class="alert alert-success">
          <%= successMessage %>
        </div>
        <% } %>

          <% if (typeof errorMessage !=='undefined' && errorMessage.length> 0) { %>
            <div class="alert alert-danger">
              <ul>
                <% errorMessage.forEach(error=> { %>
                  <li>
                    <%= error %>
                  </li>
                  <% }); %>
              </ul>
            </div>
            <% } %>
            <div id="message-container"></div>
              <form
                action="<%= editMode ? `/admin/product/editProduct/${product._id}` : '/admin/product/addProduct' %>  "
                method="post" id="upload-form" enctype="multipart/form-data" >
                <div class="form-group ">
                  <label for="productName">Product Name</label>
                  <input type="text" class="form-control" id="productName" placeholder="Enter product name"
                    name="productName" value="<%= editMode ? product.productName  :'' %>" required >
                    <i class="fa  " aria-hidden="true"></i>
                     <span></span>
                </div>
                <div class="form-group">
                  <label for="productPrice">Product Price</label>
                  <input type="number" class="form-control" id="productPrice" placeholder="Enter product price"
                    name="price" value="<%= editMode ? product.price  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productStock">Stock</label>
                  <input type="number" class="form-control" id="productStock" placeholder="Enter stock quantity"
                    name="stock" value="<%= editMode ? product.stock : '' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productWarranty">Warranty (year)</label>
                  <input type="number" class="form-control" id="productWarranty" placeholder="Enter warranty duration"
                    name="warranty" value="<%= editMode ? product.warranty : '' %>" required>
                    <!-- <i class="fa  " aria-hidden="true"></i>
                    <span></span> -->
                    <div id="messageShow"></div>
                  </div>
              
                <!-- new -->
                <div class="form-group">
                  <label for="watchType">Watch Type</label>
                  <input type="text" class="form-control" id="watchType" placeholder="Enter product watchType"
                    name="watchType" value="<%= editMode ? product.watchType  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="CaseMaterial">Case Material</label>
                  <input type="text" class="form-control" id="CaseMaterial" placeholder="Enter product CaseMaterial"
                    name="CaseMaterial" value="<%= editMode ? product.CaseMaterial  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="dialColour">Dial Colour</label>
                  <input type="text" class="form-control" id="dialColour" placeholder="Enter product dialColour"
                    name="dialColour" value="<%= editMode ? product.dialColour  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                   </div>
                <div class="form-group">
                  <label for="strapMaterial">Strap Material</label>
                  <input type="text" class="form-control" id="strapMaterial" placeholder="Enter product strapMaterial"
                    name="strapMaterial" value="<%= editMode ? product.strapMaterial  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="ModelNumber">Model Number</label>
                  <input type="number" class="form-control" id="ModelNumber" placeholder="Enter product ModelNumber"
                    name="ModelNumber" value="<%= editMode ? product.ModelNumber  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productName">Features</label>
                  <input type="text" class="form-control" id="features" placeholder="Enter product features"
                    name="features" value="<%= editMode ? product.features  :'' %>" required>
                    <i class="fa  " aria-hidden="true"></i>
                    <span></span>
                  </div>
                <div class="form-group">
                  <label for="productBrand">Brand</label>
                  <select class="form-control" id="productBrand" name="brand" required>
                    <% brands.forEach(brand=> { %>
                      <option value="<%= brand._id %>" <%= editMode && product.brand && product.brand.equals(brand._id) ? 'selected' : '' %>>
                        <%= brand.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>
                <div class="form-group">
                  <label for="productCategory">Category</label>
                  <select class="form-control" id="productCategory" name="category" required>
                    <% categories.forEach(category=> { %>
                      <option value="<%= category._id %>" <%= editMode && product.category && product.category.equals(category._id) ? 'selected' : '' %>>
                        <%= category.name %>
                      </option>
                      <% }) %>
                  </select>
                </div>



                <h2>Select Three Images</h2>

                <!-- <div class="form-group">
                  <label for="image1">Image 1</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 0)">
                  <% if (editMode && product.images && product.images.length > 0) { %>
                    <div id="preview1" class="image-preview">
                      <img src="<%= product.images[0] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview1" class="image-preview"></div>
                  <% } %>
                </div>
              
                <div class="form-group">
                  <label for="image2">Image 2</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 1)">
                  <% if (editMode && product.images && product.images.length > 1) { %>
                    <div id="preview2" class="image-preview">
                      <img src="<%= product.images[1] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview2" class="image-preview"></div>
                  <% } %>
                </div>
              
                <div class="form-group">
                  <label for="image3">Image 3</label>
                  <input type="file" accept="image/*" name="images" onchange="previewImage(event, 2)">
                  <% if (editMode && product.images && product.images.length > 2) { %>
                    <div id="preview3" class="image-preview">
                      <img src="<%= product.images[2] %>" alt="Image Preview">
                    </div>
                  <% } else { %>
                    <div id="preview3" class="image-preview"></div>
                  <% } %>
                </div> -->


                <!-- Form Fields -->
        <div class="form-group">
          <label for="image1">Image 1</label>
          <input type="file" accept="image/*" name="images" id="imageInput1" onchange="handleFileChange(event, 1)">
          <div id="preview1" class="image-preview"></div>
          
      </div>
      <div class="form-group">
          <label for="image2">Image 2</label>
          <input type="file" accept="image/*" name="images" id="imageInput2" onchange="handleFileChange(event, 2)">
          <div id="preview2" class="image-preview"></div>
         
      </div>
      <div class="form-group">
          <label for="image3">Image 3</label>
          <input type="file" accept="image/*" name="images" id="imageInput3" onchange="handleFileChange(event, 3)">
          <div id="preview3" class="image-preview"></div>
         
      </div>

     
                <!-- <p id="file-count">No files selected</p>
                <span id="image-error" style="color: red;"></span> -->
              
                
                <br>
                <br>
                <button type="submit" id="productSubmit" class="btn btn-primary d-block">
                  <%= editMode ? 'Update Product' : 'Add Product' %>
                </button>
              </form>
    </div>
 <!-- modal for crop image -->
 <div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel"
 aria-hidden="true">
 <div class="modal-dialog" role="document">
     <div class="modal-content">
         <div class="modal-header">
             <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
             <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                 <span aria-hidden="true">&times;</span>
             </button>
         </div>
         <div class="modal-body">
             <div class="img-container">
                 <img id="cropImage" src="">
             </div>
         </div>
         <div class="modal-footer">
             <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
             <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
         </div>
     </div>
 </div>
</div>
  
    <style>
      .container .fa{
        position: absolute;
        right: 100px;
        margin-top: -30px;

      }
      .container .form-group.errors input{
        border-color:  #f00;
        border-width:  2px;
      }
      .container .form-group.errors .fa{
        color:  #f00;
      }
      .form-group span{
        display: none;
      }
      .form-group.errors span{
        color: #f00;
        display: block;
      }
      .container .form-group.success .fa{
        color:  #0b0;
      }
      .container .form-group.success input{
        border-color : #0b0;
        border-width: 2px;
      }
      .form-group.success span{
        color: #0b0;
        /* display: block; */
      }
      .image-preview img {
    width: 300px;
    height: auto;
    margin-right: 0px;
}
    </style>


    <script src="/script/product.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script> -->



<!-- <script>

  function previewImage(event, index) {
  const file = event.target.files[0];
  const reader = new FileReader();
  const preview = document.getElementById(`preview${index + 1}`);


  reader.onload = function() {
    const imgElement = document.createElement('img');
    imgElement.src = reader.result;
    imgElement.alt = 'Image Preview';
    preview.innerHTML = '';
    preview.appendChild(imgElement);
  };

  if (file) {
    reader.readAsDataURL(file);
  } else {
    preview.innerHTML = 'No file selected';
  }
}


  document.getElementById('upload-form').addEventListener('submit', async function (event) {
      event.preventDefault(); // Prevent default form submission

      const form = event.target;
      const formData = new FormData(form);
      const url = form.action; // This will use the correct URL from the form action attribute
      const messageContainer = document.getElementById('message-container');



      try {
          const response = await fetch(url, {
              method: 'POST',
              body: formData,
          });

          const result = await response.json();

          // Clear previous messages
          messageContainer.innerHTML = '';

          if (response.ok) {
              // Success message
              const successMessage = document.createElement('div');
              successMessage.className = 'alert alert-success';
              successMessage.textContent = result.message || 'Product updated successfully!';
              messageContainer.appendChild(successMessage);

              // Optionally, redirect to another page after a delay
              setTimeout(() => {
                  window.location.href = '/admin/product/productList';
              }, 2000);
          } else {
              // Error message
              const errorMessage = document.createElement('div');
              errorMessage.className = 'alert alert-danger';
              errorMessage.textContent = result.message || 'An error occurred while updating the product.';
              messageContainer.appendChild(errorMessage);
          }
      } catch (error) {
          console.error('Error:', error);
          // Display error message
          messageContainer.innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
      }
  });

  // function previewImage(event, index) {
  //     const reader = new FileReader();
  //     reader.onload = function () {
  //         const preview = document.getElementById(`preview${index + 1}`);
  //         preview.innerHTML = `<img src="${reader.result}" alt="Image Preview">`;
  //     };
  //     reader.readAsDataURL(event.target.files[0]);
  // }
</script> -->

<!-- corrected editing product images -->
<!-- <script>
  let imageIndexes = [];
  function previewImage(event, index) {
  const file = event.target.files[0];
  const reader = new FileReader();
  const preview = document.getElementById(`preview${index + 1}`);

    imageIndexes.push(index)
    console.log('image index',imageIndexes)
  reader.onload = function() {
    const imgElement = document.createElement('img');
    imgElement.src = reader.result;
    imgElement.alt = 'Image Preview';
    preview.innerHTML = '';
    preview.appendChild(imgElement);
  };

  if (file) {
    reader.readAsDataURL(file);
  } else {
    preview.innerHTML = 'No file selected';
  }
}


  document.getElementById('upload-form').addEventListener('submit', async function (event) {
      event.preventDefault(); // Prevent default form submission
      alert('Image indexes: ' + imageIndexes.join(', '));
      console.log('In upload:', imageIndexes);
      const form = event.target;
      const formData = new FormData(form);
      formData.append('imageIndexes', JSON.stringify(imageIndexes));
      const url = form.action; // This will use the correct URL from the form action attribute
      const messageContainer = document.getElementById('message-container');



      try {
          const response = await fetch(url, {
              method: 'POST',
              body: formData,
          });

          const result = await response.json();

          // Clear previous messages
          messageContainer.innerHTML = '';

          if (response.ok) {
              // Success message
              const successMessage = document.createElement('div');
              successMessage.className = 'alert alert-success';
              successMessage.textContent = result.message || 'Product updated successfully!';
              messageContainer.appendChild(successMessage);

              // Optionally, redirect to another page after a delay
              setTimeout(() => {
                  window.location.href = '/admin/product/productList';
              }, 2000);
          } else {
              // Error message
              const errorMessage = document.createElement('div');
              errorMessage.className = 'alert alert-danger';
              errorMessage.textContent = result.message || 'An error occurred while updating the product.';
              messageContainer.appendChild(errorMessage);
          }
      } catch (error) {
          console.error('Error:', error);
          // Display error message
          messageContainer.innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
      }
  });

  // function previewImage(event, index) {
  //     const reader = new FileReader();
  //     reader.onload = function () {
  //         const preview = document.getElementById(`preview${index + 1}`);
  //         preview.innerHTML = `<img src="${reader.result}" alt="Image Preview">`;
  //     };
  //     reader.readAsDataURL(event.target.files[0]);
  // }
</script> -->


  <!-- Existing JavaScript Code  -->
<!-- <script>
  let cropper;
  let selectedInputId;
  let imageIndexes = [];
  function handleFileChange(event, inputId) {
      const file = event.target.files[0];
      const reader = new FileReader();
      if (!imageIndexes.includes(inputId - 1)) {
        imageIndexes.push(inputId - 1);
        console.log('input indexes', imageIndexes);
    }
      console.log('input index',imageIndexes)
      
      reader.onload = function (e) {
          const imgElement = document.getElementById('cropImage');
          imgElement.src = e.target.result;
          $('#cropModal').modal('show');
          selectedInputId = inputId;
         
          if (cropper) {
              cropper.destroy();
          }
          cropper = new Cropper(imgElement, {
              aspectRatio: 1,
              viewMode: 3,
          });
      };

      reader.readAsDataURL(file);
  }

  document.getElementById('cropButton').addEventListener('click', function () {
      const canvas = cropper.getCroppedCanvas();
      const previewElement = document.getElementById(`preview${selectedInputId}`);
      canvas.toBlob(function (blob) {
          const url = URL.createObjectURL(blob);
          previewElement.innerHTML = `<img src="${url}" alt="Image Preview" name="images">`;
          const inputElement = document.getElementById(`imageInput${selectedInputId}`);
          const dataTransfer = new DataTransfer();
          dataTransfer.items.add(new File([blob], 'cropped-image.jpg'));
          inputElement.files = dataTransfer.files;
          $('#cropModal').modal('hide');
      });
  });

  // Function to handle form submission with fetch API
  document.getElementById('upload-form').addEventListener('submit', async function (event) {
      event.preventDefault();

      // const form = document.getElementById('upload-form');
      // const formData = new FormData(form);
      alert('Image indexes: ' + imageIndexes.join(', '));
      console.log('In upload:', imageIndexes);
      const form = event.target;
      const formData = new FormData(form);
      console.log('form data:',formData)
      formData.append('imageIndexes', JSON.stringify(imageIndexes));
      const url = form.action; // This will use the correct URL from the form action attribute
      const messageContainer = document.getElementById('message-container');

      try {
          const response = await fetch(url, {
              method: 'POST',
              body: formData,
          });

          const result = await response.json();

          // Clear previous messages
          messageContainer.innerHTML = '';

          if (response.ok) {
              // Success message
              const successMessage = document.createElement('div');
              successMessage.className = 'alert alert-success';
              successMessage.textContent = result.message || 'Product updated successfully!';
              messageContainer.appendChild(successMessage);

              // Optionally, redirect to another page after a delay
              setTimeout(() => {
                  window.location.href = '/admin/product/productList';
              }, 2000);
          } else {
              // Error message
              const errorMessage = document.createElement('div');
              errorMessage.className = 'alert alert-danger';
              errorMessage.textContent = result.message || 'An error occurred while updating the product.';
              messageContainer.appendChild(errorMessage);
          }
      } catch (error) {
          console.error('Error:', error);
          // Display error message
          messageContainer.innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
      }
  });
</script> -->



<script>
  let cropper;
  let selectedInputId;
  let imageIndexes = [];
  let croppedImages = [];
  function handleFileChange(event, inputId) {
      const file = event.target.files[0];
      const reader = new FileReader();
      if (!imageIndexes.includes(inputId - 1)) {
        imageIndexes.push(inputId - 1);
        console.log('input indexes', imageIndexes);
    }
      console.log('input index',imageIndexes)
      
      reader.onload = function (e) {
          const imgElement = document.getElementById('cropImage');
          imgElement.src = e.target.result;
          $('#cropModal').modal('show');
          selectedInputId = inputId;
         
          if (cropper) {
              cropper.destroy();
          }
          cropper = new Cropper(imgElement, {
              aspectRatio: 1,
              viewMode: 3,
          });
      };

      reader.readAsDataURL(file);
  }

  document.getElementById('cropButton').addEventListener('click', function () {
      const canvas = cropper.getCroppedCanvas();
      console.log("Canvas cropped");
      const previewElement = document.getElementById(`preview${selectedInputId}`);
      console.log("Preview element found:", previewElement);
      canvas.toBlob(function (blob) {
        console.log("Blob created from canvas:", blob);
          const url = URL.createObjectURL(blob);
          console.log("URL created for blob:", url);
          previewElement.innerHTML = `<img src="${url}" alt="Image Preview" name="images">`;
          console.log("Image preview updated in HTML");
          const inputElement = document.getElementById(`imageInput${selectedInputId}`);
          console.log("Input element found:", inputElement);
          const dataTransfer = new DataTransfer();
          dataTransfer.items.add(new File([blob], 'cropped-image.jpg'));
          console.log("File added to data transfer:", dataTransfer.items);

          inputElement.files = dataTransfer.files;
          console.log("Files set to input element:", inputElement.files);

            // Store the cropped image blob in the array
            croppedImages[selectedInputId - 1] = url;
            console.log('usercroppe:',croppedImages)
          $('#cropModal').modal('hide');
          console.log("Modal hidden");
      });
  });

  // Function to handle form submission with fetch API
  document.getElementById('upload-form').addEventListener('submit', async function (event) {
      event.preventDefault();

      // const form = document.getElementById('upload-form');
      // const formData = new FormData(form);
      alert('Image indexes: ' + imageIndexes.join(', '));
      console.log('In upload:', imageIndexes);
      const form = event.target;
      const formData = new FormData(form);
      console.log('form data:',formData)
      formData.append('imageIndexes', JSON.stringify(imageIndexes));
      console.log('croppedimages:',croppedImages)
      
      // if (croppedImages) {
      //     croppedImages.forEach((blob, index) => {
      //       console.log('inside cropped image')
      //         formData.append(`croppedImage${index + 1}`, blob, `cropped-image-${index + 1}.jpg`);
      //     });
      const url = form.action; // This will use the correct URL from the form action attribute
      const messageContainer = document.getElementById('message-container');

      try {
          const response = await fetch(url, {
              method: 'POST',
              body: formData,
          });

          const result = await response.json();

          // Clear previous messages
          messageContainer.innerHTML = '';

          if (response.ok) {
              // Success message
              const successMessage = document.createElement('div');
              successMessage.className = 'alert alert-success';
              successMessage.textContent = result.message || 'Product updated successfully!';
              messageContainer.appendChild(successMessage);

              // Optionally, redirect to another page after a delay
              setTimeout(() => {
                  window.location.href = '/admin/product/productList';
              }, 20000);
          } else {
              // Error message
              const errorMessage = document.createElement('div');
              errorMessage.className = 'alert alert-danger';
              errorMessage.textContent = result.message || 'An error occurred while updating the product.';
              messageContainer.appendChild(errorMessage);
          }
      } catch (error) {
          console.error('Error:', error);
          // Display error message
          messageContainer.innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
      }
  });
</script>

    <%- include('../layouts/admin/adminFooter') %>