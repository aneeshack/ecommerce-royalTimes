<%- include('../layouts/admin/header',{title:"Dashboard"}) %>

    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    </head>

    <body>
        <div class="container">
            <!-- <h1>Admin Dashboard</h1> -->
            <h2>Today's Orders</h2>
            <div>
                <!-- <canvas id="orderChart"></canvas> -->
                <label for="dateSelect">Date:</label>
                <input type="date" id="dateSelect">

                <!-- <label for="monthSelect">Month:</label>
                <input type="month" id="monthSelect"> -->

                <label for="monthSelect">Select Month:</label>
                <select id="monthSelect">
                    <option value="1">January</option>
                    <option value="2">February</option>
                    <option value="3">March</option>
                    <option value="4">April</option>
                    <option value="5">May</option>
                    <option value="6">June</option>
                    <option value="7">July</option>
                    <option value="8">Auguest</option>
                    <option value="9">September</option>
                    <option value="10">October</option>
                    <option value="11">November</option>
                    <option value="12">December</option>
                   
                </select>

                <label for="yearSelect">Year:</label>
                <input type="number" id="yearSelect" min="2022" max="2025" step="1">
                <button id="fetchOrdersButton">Fetch Orders</button>
                <canvas id="orderChart"></canvas>

            </div>

            <script>
                document.addEventListener('DOMContentLoaded', () => {

                    // Initial chart setup (assuming you have initial data for today)
                    const rawOrderData = `<%- orderData %>`;

                    try {
                        const orderData = JSON.parse(rawOrderData);
                        console.log('Order data is:', orderData);

                        // Now you can safely use orderData for further processing
                        if (!Array.isArray(orderData) || orderData.length === 0) {
                            console.warn('No orders data available for today.');
                            return;
                        }

                        // Example: Displaying order details
                        orderData.forEach(order => {
                            console.log('Order ID:', order._id);
                            console.log('Total Price:', order.totalPrice);
                            // Add more logic as needed
                        });

                        const labels = orderData.map(order => new Date(order.dateOrdered).toLocaleTimeString());
                        const amounts = orderData.map(order => order.totalPrice);

                        const ctx = document.getElementById('orderChart').getContext('2d');
                        const orderChart = new Chart(ctx, {
                            type: 'bar', // You can also use 'bar', 'pie', 'doughnut', etc.
                            data: {
                                labels: labels,
                                datasets: [{
                                    label: 'Order Amounts',
                                    data: amounts,
                                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                    borderColor: 'rgba(75, 192, 192, 1)',
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                }
                            }
                        });

                    } catch (error) {
                        console.error('Error parsing order data:', error);
                    }
                });

                // function to update the chart
                document.getElementById('fetchOrdersButton').addEventListener('click', async () => {
                    const selectedDate = document.getElementById('dateSelect').value;
                    const selectedMonth = document.getElementById('monthSelect').value;
                    const selectedYear = document.getElementById('yearSelect').value;

                    // Example: Fetch data based on selected date, month, or year
                    // Replace with your actual logic to fetch data dynamically
                    // For demonstration, assuming orderData is fetched dynamically based on selection
                    let queryParams = [];

                    if (selectedDate) queryParams.push(`date=${selectedDate}`);
                    if (selectedMonth) queryParams.push(`month=${selectedMonth}`);
                    if (selectedYear) queryParams.push(`year=${selectedYear}`);

                    const queryString = queryParams.length > 0 ? `?${queryParams.join('&')}` : '';
                    console.log('query string:', queryString)
                    try {
                        const response = await fetch(`/admin/orders${queryString}`);
                        const data = await response.json();

                        if (response.ok) {
                            console.log('Fetched data:', data);

                            // Update chart data and labels
                            const labels = data.map(order => new Date(order.dateOrdered).toLocaleTimeString());
                            const amounts = data.map(order => order.totalPrice);

                            orderChart.data.labels = labels;
                            orderChart.data.datasets[0].data = amounts;

                            orderChart.update(); // Update the chart
                        } else {
                            console.log('error in fetching datas:', data)
                        }


                    } catch (error) {
                        console.error('Error fetching data:', error);
                    }
                })



            </script>


            <%- include('../layouts/admin/adminFooter') %>