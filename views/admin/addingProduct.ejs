<%- include('../layouts/admin/header', { title: 'Add Product' }) %>

<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" />
<style>
  .img-thumbnail {
  width: 200px; 
  height: auto; 
}
</style>
</head>

<body>
    <div class="container mt-5">
        <h1 class="mb-4">Add Product</h1>
      
        <% if(successMessage && successMessage.length >0) { %>
          <div class="alert alert-success"><%= successMessage %></div>
      <% } %>
      <% if(errorMessage && errorMessage.length > 0) { %>
          <div class="alert alert-danger"><%= errorMessage %></div>
      <% } %>
        <form action="/admin/product/addProduct" method="post" id="upload-form" enctype="multipart/form-data">
            <div class="form-group">
                <label for="productName">Product Name</label>
                <input type="text" class="form-control" id="productName" placeholder="Enter product name"
                    name="productName" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="productPrice">Product Price</label>
                <input type="number" class="form-control" id="productPrice" placeholder="Enter product price"
                    name="price" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="productStock">Stock</label>
                <input type="number" class="form-control" id="productStock" placeholder="Enter stock quantity"
                    name="stock" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="productWarranty">Warranty (year)</label>
                <input type="number" class="form-control" id="productWarranty" placeholder="Enter warranty duration"
                    name="warranty" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="watchType">Watch Type</label>
                <input type="text" class="form-control" id="watchType" placeholder="Enter product watchType"
                    name="watchType" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="CaseMaterial">Case Material</label>
                <input type="text" class="form-control" id="CaseMaterial" placeholder="Enter product CaseMaterial"
                    name="CaseMaterial" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="dialColour">Dial Colour</label>
                <input type="text" class="form-control" id="dialColour" placeholder="Enter product dialColour"
                    name="dialColour" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="strapMaterial">Strap Material</label>
                <input type="text" class="form-control" id="strapMaterial" placeholder="Enter product strapMaterial"
                    name="strapMaterial" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="ModelNumber">Model Number</label>
                <input type="number" class="form-control" id="ModelNumber" placeholder="Enter product ModelNumber"
                    name="ModelNumber" value="" required>
                
                <span></span>
            </div>
            <div class="form-group">
                <label for="features">Features</label>
                <input type="text" class="form-control" id="features" placeholder="Enter product features"
                    name="features" value="" required>
           
                <span></span>
            </div>
            <div class="form-group">
                <label for="productBrand">Brand</label>
                <select class="form-control" id="productBrand" name="brand" required>
                    <% brands.forEach(brand => { %>
                    <option value="<%= brand._id %>"><%= brand.name %></option>
                    <% }) %>
                </select>
            </div>
            <div class="form-group">
                <label for="productCategory">Category</label>
                <select class="form-control" id="productCategory" name="category" required>
                    <% categories.forEach(category => { %>
                    <option value="<%= category._id %>"><%= category.name %></option>
                    <% }) %>
                </select>
            </div>

            <h2>Select Three Images</h2>
 <!-- Product Images -->
 <label for="image">Image:</label><br />
 <input
   type="file"
   id="images"
   name="images"
   accept="image/*"
   multiple
   onchange="displaySelectedImages(this)"
 />
 <div
   class="selected-images-container"
   id="selectedImagesContainer"
 ></div>
 <span class="error-message" id="images-error" style="color: red"></span>
            <button type="submit" class="btn btn-primary d-block">Add Product</button>
        </form>
    </div>


 
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="/script/product.js"></script>

  
<script>
    function displaySelectedImages(input) {
    const selectedImagesContainer = document.getElementById("selectedImagesContainer");
    selectedImagesContainer.innerHTML = "";

    for (let i = 0; i < input.files.length; i++) {
      const file = input.files[i];
      const reader = new FileReader();
      const cropContainer = document.createElement("div");
      cropContainer.classList.add("image-crop-container");
      cropContainer.innerHTML = `
        <div class="image-container">
          <img id="image${i}" src="" alt="Select an image to crop" class="img-thumbnail">
        </div>
        <button class="crop-button" id="cropButton${i}">Crop Image ${i + 1}</button>
      `;
      selectedImagesContainer.appendChild(cropContainer);

      const image = cropContainer.querySelector(`#image${i}`);
      const cropButton = cropContainer.querySelector(`#cropButton${i}`);

      reader.onload = () => {
        image.src = reader.result;
        let cropper = new Cropper(image, {
          aspectRatio: 1,
          viewMode: 1,
        });

        cropButton.addEventListener("click", (event) => {
          event.preventDefault();
          if (cropper) {
            const canvas = cropper.getCroppedCanvas({
              width: 800, 
              height: 800, 
              imageSmoothingEnabled: true,
              imageSmoothingQuality: 'high',
            });
            const croppedImageDataURL = canvas.toDataURL('image/jpeg', 1.0); 
            image.src = croppedImageDataURL;
            const croppedImageFile = dataURLToFile(croppedImageDataURL, file.name);
            const currentFiles = Array.from(input.files);
            currentFiles[i] = croppedImageFile;

            const newFileList = createFileList(currentFiles);
            input.files = newFileList;
            cropper.destroy();
            cropper = null;
          } else {
            cropper = new Cropper(image, {
              aspectRatio: 1,
              viewMode: 1,
            });
          }
        });
      };
      reader.readAsDataURL(file);
    }
  }
  function dataURLToFile(dataUrl, filename) {
    const arr = dataUrl.split(",");
    const mime = arr[0].match(/:(.*?);/)[1];
    const bstr = atob(arr[1]);

    let n = bstr.length;
    const u8arr = new Uint8Array(n);
    while (n--) {
      u8arr[n] = bstr.charCodeAt(n);
    }

    return new File([u8arr], filename, { type: mime });
  }
  function createFileList(currentList) {
    const dataTransfer = new DataTransfer();
    currentList.forEach((file) => {
      dataTransfer.items.add(file);
    });
    return dataTransfer.files;
  }

</script>
    <%- include('../layouts/admin/adminFooter') %>
</body>

</html>
